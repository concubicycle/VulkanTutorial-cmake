cmake_minimum_required(VERSION 3.15)
project(vulkan_tutorial)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake_modules")
set(CMAKE_INSTALL_PREFIX "${PROJECT_SOURCE_DIR}/install/")
set(CMAKE_BINARY_DIR "${PROJECT_SOURCE_DIR}/build")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY  ${CMAKE_BINARY_DIR}/bin)
set(EXTERNAL_INSTALL_LOCATION ${PROJECT_SOURCE_DIR}/external)

SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++17 -pthread")

# WARNING: Doesn't work when build directory isn't /build for some reason (with CLion)
set(ASSETS_DIR ${PROJECT_SOURCE_DIR}/shaders)
file(COPY ${ASSETS_DIR} DESTINATION ${CMAKE_RUNTIME_OUTPUT_DIRECTORY})
file(COPY ${ASSETS_DIR} DESTINATION ${CMAKE_BINARY_DIR})

include(add_glfw)
include(add_glm)

find_package(Vulkan REQUIRED)


add_executable(00_base_code code/00_base_code.cpp)
add_executable(01_instance_creation code/01_instance_creation.cpp)
add_executable(02_validation_layers code/02_validation_layers.cpp)
add_executable(03_physical_device_selection code/03_physical_device_selection.cpp)
add_executable(04_logical_device code/04_logical_device.cpp)
add_executable(05_window_surface code/05_window_surface.cpp)
add_executable(06_swap_chain_creation code/06_swap_chain_creation.cpp)
add_executable(07_image_views code/07_image_views.cpp)
add_executable(08_graphics_pipeline code/08_graphics_pipeline.cpp)
add_executable(09_shader_modules code/09_shader_modules.cpp)
add_executable(10_fixed_functions code/10_fixed_functions.cpp)
add_executable(11_render_passes code/11_render_passes.cpp)
add_executable(12_graphics_pipeline_complete code/12_graphics_pipeline_complete.cpp)
add_executable(13_framebuffers code/13_framebuffers.cpp)
add_executable(14_command_buffers code/14_command_buffers.cpp)
add_executable(15_hello_triangle code/15_hello_triangle.cpp)
add_executable(16_swap_chain_recreation code/16_swap_chain_recreation.cpp)
add_executable(17_vertex_input code/17_vertex_input.cpp)
add_executable(18_vertex_buffer code/18_vertex_buffer.cpp)
add_executable(19_staging_buffer code/19_staging_buffer.cpp)
add_executable(20_index_buffer code/20_index_buffer.cpp)
add_executable(21_descriptor_layout code/21_descriptor_layout.cpp)
add_executable(22_descriptor_sets code/22_descriptor_sets.cpp)
add_executable(23_texture_image code/23_texture_image.cpp)
add_executable(24_sampler code/24_sampler.cpp)
add_executable(25_texture_mapping code/25_texture_mapping.cpp)
add_executable(26_depth_buffering code/26_depth_buffering.cpp)
add_executable(27_model_loading code/27_model_loading.cpp)
add_executable(28_mipmapping code/28_mipmapping.cpp)
add_executable(29_multisampling code/29_multisampling.cpp)

add_dependencies(00_base_code glfw glm  Vulkan::Vulkan) 
add_dependencies(01_instance_creation glfw glm) 
add_dependencies(02_validation_layers glfw glm) 
add_dependencies(03_physical_device_selection glfw glm) 
add_dependencies(04_logical_device glfw glm) 
add_dependencies(05_window_surface glfw glm) 
add_dependencies(06_swap_chain_creation glfw glm) 
add_dependencies(07_image_views glfw glm) 
add_dependencies(08_graphics_pipeline glfw glm) 
add_dependencies(09_shader_modules glfw glm) 
add_dependencies(10_fixed_functions glfw glm) 
add_dependencies(11_render_passes glfw glm) 
add_dependencies(12_graphics_pipeline_complete glfw glm) 
add_dependencies(13_framebuffers glfw glm) 
add_dependencies(14_command_buffers glfw glm) 
add_dependencies(15_hello_triangle glfw glm  Vulkan::Vulkan) 
add_dependencies(16_swap_chain_recreation glfw glm) 
add_dependencies(17_vertex_input glfw glm) 
add_dependencies(18_vertex_buffer glfw glm) 
add_dependencies(19_staging_buffer glfw glm) 
add_dependencies(20_index_buffer glfw glm) 
add_dependencies(21_descriptor_layout glfw glm) 
add_dependencies(22_descriptor_sets glfw glm) 
add_dependencies(23_texture_image glfw glm) 
add_dependencies(24_sampler glfw glm) 
add_dependencies(25_texture_mapping glfw glm) 
add_dependencies(26_depth_buffering glfw glm) 
add_dependencies(27_model_loading glfw glm) 
add_dependencies(28_mipmapping glfw glm) 
add_dependencies(29_multisampling glfw glm)

target_link_libraries(00_base_code  PRIVATE ${GLFW_LIB} Vulkan::Vulkan)
target_link_libraries(01_instance_creation  PRIVATE ${GLFW_LIB} Vulkan::Vulkan)
target_link_libraries(02_validation_layers  PRIVATE ${GLFW_LIB} Vulkan::Vulkan)
target_link_libraries(03_physical_device_selection  PRIVATE ${GLFW_LIB} Vulkan::Vulkan)
target_link_libraries(04_logical_device  PRIVATE ${GLFW_LIB} Vulkan::Vulkan)
target_link_libraries(05_window_surface  PRIVATE ${GLFW_LIB} Vulkan::Vulkan)
target_link_libraries(06_swap_chain_creation  PRIVATE ${GLFW_LIB} Vulkan::Vulkan)
target_link_libraries(07_image_views  PRIVATE ${GLFW_LIB} Vulkan::Vulkan)
target_link_libraries(08_graphics_pipeline  PRIVATE ${GLFW_LIB} Vulkan::Vulkan)
target_link_libraries(09_shader_modules  PRIVATE ${GLFW_LIB} Vulkan::Vulkan)
target_link_libraries(10_fixed_functions  PRIVATE ${GLFW_LIB} Vulkan::Vulkan)
target_link_libraries(11_render_passes  PRIVATE ${GLFW_LIB} Vulkan::Vulkan)
target_link_libraries(12_graphics_pipeline_complete  PRIVATE ${GLFW_LIB} Vulkan::Vulkan)
target_link_libraries(13_framebuffers  PRIVATE ${GLFW_LIB} Vulkan::Vulkan)
target_link_libraries(14_command_buffers  PRIVATE ${GLFW_LIB} Vulkan::Vulkan)
target_link_libraries(15_hello_triangle  PRIVATE ${GLFW_LIB} Vulkan::Vulkan)
target_link_libraries(16_swap_chain_recreation  PRIVATE ${GLFW_LIB} Vulkan::Vulkan)
target_link_libraries(17_vertex_input  PRIVATE ${GLFW_LIB} Vulkan::Vulkan)
target_link_libraries(18_vertex_buffer  PRIVATE ${GLFW_LIB} Vulkan::Vulkan)
target_link_libraries(19_staging_buffer  PRIVATE ${GLFW_LIB} Vulkan::Vulkan)
target_link_libraries(20_index_buffer  PRIVATE ${GLFW_LIB} Vulkan::Vulkan)
target_link_libraries(21_descriptor_layout  PRIVATE ${GLFW_LIB} Vulkan::Vulkan)
target_link_libraries(22_descriptor_sets  PRIVATE ${GLFW_LIB} Vulkan::Vulkan)
target_link_libraries(23_texture_image  PRIVATE ${GLFW_LIB} Vulkan::Vulkan)
target_link_libraries(24_sampler  PRIVATE ${GLFW_LIB} Vulkan::Vulkan)
target_link_libraries(25_texture_mapping  PRIVATE ${GLFW_LIB} Vulkan::Vulkan)
target_link_libraries(26_depth_buffering  PRIVATE ${GLFW_LIB} Vulkan::Vulkan)
target_link_libraries(27_model_loading  PRIVATE ${GLFW_LIB} Vulkan::Vulkan)
target_link_libraries(28_mipmapping  PRIVATE ${GLFW_LIB} Vulkan::Vulkan)
target_link_libraries(29_multisampling  PRIVATE ${GLFW_LIB} Vulkan::Vulkan)

target_include_directories(00_base_code  PRIVATE ${GLM_INCLUDE} ${GLFW_INCLUDE} Vulkan::Vulkan)
target_include_directories(01_instance_creation  PRIVATE ${GLM_INCLUDE} ${GLFW_INCLUDE} Vulkan::Vulkan)
target_include_directories(02_validation_layers  PRIVATE ${GLM_INCLUDE} ${GLFW_INCLUDE} Vulkan::Vulkan)
target_include_directories(03_physical_device_selection  PRIVATE ${GLM_INCLUDE} ${GLFW_INCLUDE} Vulkan::Vulkan)
target_include_directories(04_logical_device  PRIVATE ${GLM_INCLUDE} ${GLFW_INCLUDE} Vulkan::Vulkan)
target_include_directories(05_window_surface  PRIVATE ${GLM_INCLUDE} ${GLFW_INCLUDE} Vulkan::Vulkan)
target_include_directories(06_swap_chain_creation  PRIVATE ${GLM_INCLUDE} ${GLFW_INCLUDE} Vulkan::Vulkan)
target_include_directories(07_image_views  PRIVATE ${GLM_INCLUDE} ${GLFW_INCLUDE} Vulkan::Vulkan)
target_include_directories(08_graphics_pipeline  PRIVATE ${GLM_INCLUDE} ${GLFW_INCLUDE} Vulkan::Vulkan)
target_include_directories(09_shader_modules  PRIVATE ${GLM_INCLUDE} ${GLFW_INCLUDE} Vulkan::Vulkan)
target_include_directories(10_fixed_functions  PRIVATE ${GLM_INCLUDE} ${GLFW_INCLUDE} Vulkan::Vulkan)
target_include_directories(11_render_passes  PRIVATE ${GLM_INCLUDE} ${GLFW_INCLUDE} Vulkan::Vulkan)
target_include_directories(12_graphics_pipeline_complete  PRIVATE ${GLM_INCLUDE} ${GLFW_INCLUDE} Vulkan::Vulkan)
target_include_directories(13_framebuffers  PRIVATE ${GLM_INCLUDE} ${GLFW_INCLUDE} Vulkan::Vulkan)
target_include_directories(14_command_buffers  PRIVATE ${GLM_INCLUDE} ${GLFW_INCLUDE} Vulkan::Vulkan)
target_include_directories(15_hello_triangle  PRIVATE ${GLM_INCLUDE} ${GLFW_INCLUDE} Vulkan::Vulkan)
target_include_directories(16_swap_chain_recreation  PRIVATE ${GLM_INCLUDE} ${GLFW_INCLUDE} Vulkan::Vulkan)
target_include_directories(17_vertex_input  PRIVATE ${GLM_INCLUDE} ${GLFW_INCLUDE} Vulkan::Vulkan)
target_include_directories(18_vertex_buffer  PRIVATE ${GLM_INCLUDE} ${GLFW_INCLUDE} Vulkan::Vulkan)
target_include_directories(19_staging_buffer  PRIVATE ${GLM_INCLUDE} ${GLFW_INCLUDE} Vulkan::Vulkan)
target_include_directories(20_index_buffer  PRIVATE ${GLM_INCLUDE} ${GLFW_INCLUDE} Vulkan::Vulkan)
target_include_directories(21_descriptor_layout  PRIVATE ${GLM_INCLUDE} ${GLFW_INCLUDE} Vulkan::Vulkan)
target_include_directories(22_descriptor_sets  PRIVATE ${GLM_INCLUDE} ${GLFW_INCLUDE} Vulkan::Vulkan)
target_include_directories(23_texture_image  PRIVATE ${GLM_INCLUDE} ${GLFW_INCLUDE} Vulkan::Vulkan)
target_include_directories(24_sampler  PRIVATE ${GLM_INCLUDE} ${GLFW_INCLUDE} Vulkan::Vulkan)
target_include_directories(25_texture_mapping  PRIVATE ${GLM_INCLUDE} ${GLFW_INCLUDE} Vulkan::Vulkan)
target_include_directories(26_depth_buffering  PRIVATE ${GLM_INCLUDE} ${GLFW_INCLUDE} Vulkan::Vulkan)
target_include_directories(27_model_loading  PRIVATE ${GLM_INCLUDE} ${GLFW_INCLUDE} Vulkan::Vulkan)
target_include_directories(28_mipmapping  PRIVATE ${GLM_INCLUDE} ${GLFW_INCLUDE} Vulkan::Vulkan)
target_include_directories(29_multisampling  PRIVATE ${GLM_INCLUDE} ${GLFW_INCLUDE} Vulkan::Vulkan)

if (UNIX)
    target_link_libraries(00_base_code PRIVATE X11)
    target_link_libraries(01_instance_creation PRIVATE X11)
    target_link_libraries(02_validation_layers PRIVATE X11)
    target_link_libraries(03_physical_device_selection PRIVATE X11)
    target_link_libraries(04_logical_device PRIVATE X11)
    target_link_libraries(05_window_surface PRIVATE X11)
    target_link_libraries(06_swap_chain_creation PRIVATE X11)
    target_link_libraries(07_image_views PRIVATE X11)
    target_link_libraries(08_graphics_pipeline PRIVATE X11)
    target_link_libraries(09_shader_modules PRIVATE X11)
    target_link_libraries(10_fixed_functions PRIVATE X11)
    target_link_libraries(11_render_passes PRIVATE X11)
    target_link_libraries(12_graphics_pipeline_complete PRIVATE X11)
    target_link_libraries(13_framebuffers PRIVATE X11)
    target_link_libraries(14_command_buffers PRIVATE X11)
    target_link_libraries(15_hello_triangle PRIVATE X11)
    target_link_libraries(16_swap_chain_recreation PRIVATE X11)
    target_link_libraries(17_vertex_input PRIVATE X11)
    target_link_libraries(18_vertex_buffer PRIVATE X11)
    target_link_libraries(19_staging_buffer PRIVATE X11)
    target_link_libraries(20_index_buffer PRIVATE X11)
    target_link_libraries(21_descriptor_layout PRIVATE X11)
    target_link_libraries(22_descriptor_sets PRIVATE X11)
    target_link_libraries(23_texture_image PRIVATE X11)
    target_link_libraries(24_sampler PRIVATE X11)
    target_link_libraries(25_texture_mapping PRIVATE X11)
    target_link_libraries(26_depth_buffering PRIVATE X11)
    target_link_libraries(27_model_loading PRIVATE X11)
    target_link_libraries(28_mipmapping PRIVATE X11)
    target_link_libraries(29_multisampling PRIVATE X11)
endif (UNIX)

if (CMAKE_DL_LIBS)
    target_link_libraries(00_base_code PRIVATE ${CMAKE_DL_LIBS})
    target_link_libraries(01_instance_creation PRIVATE ${CMAKE_DL_LIBS})
    target_link_libraries(02_validation_layers PRIVATE ${CMAKE_DL_LIBS})
    target_link_libraries(03_physical_device_selection PRIVATE ${CMAKE_DL_LIBS})
    target_link_libraries(04_logical_device PRIVATE ${CMAKE_DL_LIBS})
    target_link_libraries(05_window_surface PRIVATE ${CMAKE_DL_LIBS})
    target_link_libraries(06_swap_chain_creation PRIVATE ${CMAKE_DL_LIBS})
    target_link_libraries(07_image_views PRIVATE ${CMAKE_DL_LIBS})
    target_link_libraries(08_graphics_pipeline PRIVATE ${CMAKE_DL_LIBS})
    target_link_libraries(09_shader_modules PRIVATE ${CMAKE_DL_LIBS})
    target_link_libraries(10_fixed_functions PRIVATE ${CMAKE_DL_LIBS})
    target_link_libraries(11_render_passes PRIVATE ${CMAKE_DL_LIBS})
    target_link_libraries(12_graphics_pipeline_complete PRIVATE ${CMAKE_DL_LIBS})
    target_link_libraries(13_framebuffers PRIVATE ${CMAKE_DL_LIBS})
    target_link_libraries(14_command_buffers PRIVATE ${CMAKE_DL_LIBS})
    target_link_libraries(15_hello_triangle PRIVATE ${CMAKE_DL_LIBS})
    target_link_libraries(16_swap_chain_recreation PRIVATE ${CMAKE_DL_LIBS})
    target_link_libraries(17_vertex_input PRIVATE ${CMAKE_DL_LIBS})
    target_link_libraries(18_vertex_buffer PRIVATE ${CMAKE_DL_LIBS})
    target_link_libraries(19_staging_buffer PRIVATE ${CMAKE_DL_LIBS})
    target_link_libraries(20_index_buffer PRIVATE ${CMAKE_DL_LIBS})
    target_link_libraries(21_descriptor_layout PRIVATE ${CMAKE_DL_LIBS})
    target_link_libraries(22_descriptor_sets PRIVATE ${CMAKE_DL_LIBS})
    target_link_libraries(23_texture_image PRIVATE ${CMAKE_DL_LIBS})
    target_link_libraries(24_sampler PRIVATE ${CMAKE_DL_LIBS})
    target_link_libraries(25_texture_mapping PRIVATE ${CMAKE_DL_LIBS})
    target_link_libraries(26_depth_buffering PRIVATE ${CMAKE_DL_LIBS})
    target_link_libraries(27_model_loading PRIVATE ${CMAKE_DL_LIBS})
    target_link_libraries(28_mipmapping PRIVATE ${CMAKE_DL_LIBS})
    target_link_libraries(29_multisampling PRIVATE ${CMAKE_DL_LIBS})
endif ()